{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAVESH-PC\\\\OneDrive\\\\Desktop\\\\Resume-Shortlisting\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CryptoJS from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [template, setTemplate] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const jobTemplates = [\"Software Engineer - Java, Python, SQL\", \"Data Analyst - Python, SQL, Tableau\", \"Frontend Developer - React, JavaScript, CSS\", \"AI Engineer - Python, Deep Learning, NLP, TensorFlow\", \"Cloud Engineer - AWS, Azure, Google Cloud\", \"Software Engineer - Java, Python, SQL, C++\", \"Frontend Developer - React, JavaScript, CSS, HTML, Redux\", \"Backend Developer - Node.js, Express.js, MongoDB, SQL\", \"Full Stack Developer - MERN Stack (MongoDB, Express.js, React, Node.js), REST APIs\", \"AI Engineer - Python, Deep Learning, NLP, TensorFlow, PyTorch\", \"Data Analyst - Python, SQL, Tableau, Power BI\", \"DevOps Engineer - CI/CD, Jenkins, Docker, Kubernetes, AWS\", \"Cybersecurity Engineer - Network Security, Penetration Testing, SIEM, Firewall\", \"Machine Learning Engineer - Python, Scikit-Learn, TensorFlow, Keras\", \"Blockchain Developer - Solidity, Ethereum, Smart Contracts, Hyperledger\", \"Database Administrator - SQL, MySQL, MongoDB, Oracle\", \"Game Developer - Unity, C#, Unreal Engine, Game Physics\", \"Data Analyst - Python, SQL, Tableau\", \"Frontend Developer - React, JavaScript, CSS\", \"AI Engineer - Python, Deep Learning, NLP, TensorFlow\", \"Cloud Engineer - AWS, Azure, Google Cloud\", \"Software Engineer - Java, Python, SQL, C++\", \"Frontend Developer - React, JavaScript, CSS, HTML, Redux\", \"Backend Developer - Node.js, Express.js, MongoDB, SQL\", \"Full Stack Developer - MERN Stack (MongoDB, Express.js, React, Node.js), REST APIs\", \"AI Engineer - Python, Deep Learning, NLP, TensorFlow, PyTorch\", \"Data Scientist - Python, R, Machine Learning, SQL, Pandas\", \"Data Analyst - Python, SQL, Tableau, Power BI\", \"DevOps Engineer - CI/CD, Jenkins, Docker, Kubernetes, AWS\", \"Cybersecurity Engineer - Network Security, Penetration Testing, SIEM, Firewall\", \"Machine Learning Engineer - Python, Scikit-Learn, TensorFlow, Keras\", \"Blockchain Developer - Solidity, Ethereum, Smart Contracts, Hyperledger\", \"Database Administrator - SQL, MySQL, MongoDB, Oracle\", \"Game Developer - Unity, C#, Unreal Engine, Game Physics\", \"Mobile App Developer - Android (Java, Kotlin), iOS (Swift, Objective-C), Flutter\", \"UI/UX Designer -Figma, Adobe XD, Sketch, Prototyping\", \"Product Manager - Agile, Scrum, Jira, Roadmap Planning\", \"Technical Writer - Documentation, API Writing, Markdown, Git\", \"Quality Assurance Engineer (QA) - Selenium, Postman, TestNG, Automation\", \"System Administrator - Linux, Windows Server, Network Configuration\", \"IT Support Engineer - Troubleshooting, Ticketing Systems, Hardware & Software Support\", \"Network Engineer - LAN/WAN, Cisco, Network Protocols, Firewalls\", \"Embedded Systems Engineer - C, C++, Microcontrollers, RTOS\", \"Electrical Engineer - Circuit Design, MATLAB, PCB Design, Embedded C\", \"Mechanical Engineer - AutoCAD, SolidWorks, Ansys, Mechanical Design\", \"Civil Engineer - AutoCAD, Structural Design, Project Management\", \"Robotics Engineer - ROS, Python, SLAM, Robotics Algorithms\", \"Digital Marketing Specialist - SEO, Google Analytics, PPC, Content Marketing\", \"Business Analyst - SQL, Excel, Power BI, Data Visualization\", \"Salesforce Developer - Apex, Visualforce, Lightning, CRM\", \"ERP Consultant - SAP, Oracle ERP, Microsoft Dynamics, Business Processes\", \"IoT Developer - Arduino, Raspberry Pi, MQTT, IoT Protocols\", \"Telecom Engineer - 5G, LTE, Network Protocols, VoIP\", \"Automation Engineer - Python, Selenium, Ansible, Shell Scripting\", \"Technical Support Engineer - Troubleshooting, Ticketing, Customer Support\", \"Solution Architect - Cloud Architecture, AWS, GCP, Azure, Microservices\", \"Web Developer - HTML, CSS, JavaScript, PHP, WordPress\", \"No-Code Developer - Bubble, Webflow, Airtable, Zapier\", \"Game Tester - Game Testing, Bug Reporting, Test Cases, QA\", \"Content Writer - SEO, Blog Writing, Content Strategy, Copywriting\", \"Project Manager - Agile, Scrum, PMP, Jira\", \"Business Development Manager - Sales, CRM, Lead Generation, Negotiation\", \"Digital Forensics Expert - Cybercrime Investigation, Digital Evidence, Forensics Tools\", \"Ethical Hacker - Penetration Testing, Kali Linux, Metasploit, Nmap\", \"Data Engineer - ETL, Python, Spark, Big Data, SQL\", \"IT Consultant - Solution Design, IT Infrastructure, Cloud Strategy\", \"Graphic Designer - Adobe Photoshop, Illustrator, Canva, Figma\", \"Video Editor - Premiere Pro, After Effects, DaVinci Resolve\", \"SEO Specialist - On-Page SEO, Off-Page SEO, Google Analytics\", \"Social Media Manager - Facebook Ads, Instagram Marketing, Content Strategy\"];\n\n  // Generate a consistent score based on resume content and job description\n  const generateScore = (resumeContent, jobDesc) => {\n    const combinedContent = resumeContent + jobDesc;\n    const hash = CryptoJS.SHA256(combinedContent).toString();\n    const score = parseInt(hash.substring(0, 8), 16) % 101;\n    return score;\n  };\n\n  // Generate review feedback based on the match score\n  const getReviewFeedback = score => {\n    if (score >= 80) return \"Excellent match! Your resume fits the job perfectly.\";\n    if (score >= 60) return \"Good match. Minor improvements can make it stand out.\";\n    if (score >= 40) return \"Average match. Add more relevant skills and achievements.\";\n    return \"Low match. Enhance your resume with relevant keywords and experience.\";\n  };\n  const handleFileChange = event => {\n    const uploadedFiles = Array.from(event.target.files);\n\n    // Validate file types (only PDF)\n    const validFiles = uploadedFiles.filter(file => file.type === \"application/pdf\");\n    if (validFiles.length < uploadedFiles.length) {\n      alert(\"Only PDF files are allowed. Some files were ignored.\");\n    }\n    setFiles(validFiles);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (files.length === 0 || !jobDesc && !template) {\n      alert(\"Please upload at least one resume and provide a job description.\");\n      return;\n    }\n    setLoading(true);\n    setProgress(0);\n    const newResults = [];\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const reader = new FileReader();\n      reader.onload = e => {\n        const resumeContent = e.target.result;\n        const score = generateScore(resumeContent, jobDesc || template);\n        newResults.push({\n          name: file.name,\n          score: score,\n          feedback: getReviewFeedback(score)\n        });\n        setProgress((i + 1) / files.length * 100);\n        if (newResults.length === files.length) {\n          setResults(newResults);\n          setLoading(false);\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Chalie - Quick\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"resume\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Upload Resumes (PDF only)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"resume\",\n        accept: \".pdf\",\n        multiple: true,\n        className: \"form-control\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"template\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Job Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"template\",\n        className: \"form-control\",\n        onChange: e => setTemplate(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Job Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), jobTemplates.map((job, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: job,\n          children: job\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        placeholder: \"Or enter manually...\",\n        value: jobDesc,\n        onChange: e => setJobDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleSubmit,\n        disabled: loading,\n        children: loading ? \"Processing...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar progress-bar-striped progress-bar-animated\",\n        role: \"progressbar\",\n        style: {\n          width: `${progress}%`\n        },\n        children: [Math.round(progress), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Shortlisted Resumes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), results.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card ${result.score >= 50 ? \"border-success\" : \"border-danger\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Match Score: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [result.score, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: result.feedback\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this), result.score < 50 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge bg-danger\",\n                children: \"\\u26A0\\uFE0F Needs Improvement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge bg-success\",\n                children: \"\\u2705 Good Match\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results yet. Submit resumes to view matches.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WUAUEuVOEfTIOrt8Klkvy+KcWuI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","CryptoJS","jsxDEV","_jsxDEV","App","_s","files","setFiles","jobDesc","setJobDesc","template","setTemplate","loading","setLoading","results","setResults","progress","setProgress","jobTemplates","generateScore","resumeContent","combinedContent","hash","SHA256","toString","score","parseInt","substring","getReviewFeedback","handleFileChange","event","uploadedFiles","Array","from","target","validFiles","filter","file","type","length","alert","handleSubmit","preventDefault","newResults","i","reader","FileReader","onload","e","result","push","name","feedback","readAsText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","accept","multiple","onChange","value","map","job","index","placeholder","onClick","disabled","role","style","width","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/BHAVESH-PC/OneDrive/Desktop/Resume-Shortlisting/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CryptoJS from \"crypto-js\";\n\nconst App = () => {\n  const [files, setFiles] = useState([]);\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [template, setTemplate] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const jobTemplates = [\n    \"Software Engineer - Java, Python, SQL\",\n    \"Data Analyst - Python, SQL, Tableau\",\n    \"Frontend Developer - React, JavaScript, CSS\",\n    \"AI Engineer - Python, Deep Learning, NLP, TensorFlow\",\n    \"Cloud Engineer - AWS, Azure, Google Cloud\",\n    \"Software Engineer - Java, Python, SQL, C++\",\n    \"Frontend Developer - React, JavaScript, CSS, HTML, Redux\",\n    \"Backend Developer - Node.js, Express.js, MongoDB, SQL\",\n    \"Full Stack Developer - MERN Stack (MongoDB, Express.js, React, Node.js), REST APIs\",\n    \"AI Engineer - Python, Deep Learning, NLP, TensorFlow, PyTorch\",\n    \"Data Analyst - Python, SQL, Tableau, Power BI\",\n    \"DevOps Engineer - CI/CD, Jenkins, Docker, Kubernetes, AWS\",\n    \"Cybersecurity Engineer - Network Security, Penetration Testing, SIEM, Firewall\",\n    \"Machine Learning Engineer - Python, Scikit-Learn, TensorFlow, Keras\",\n    \"Blockchain Developer - Solidity, Ethereum, Smart Contracts, Hyperledger\",\n    \"Database Administrator - SQL, MySQL, MongoDB, Oracle\",\n    \"Game Developer - Unity, C#, Unreal Engine, Game Physics\",\n  \n  \"Data Analyst - Python, SQL, Tableau\",\n  \"Frontend Developer - React, JavaScript, CSS\",\n  \"AI Engineer - Python, Deep Learning, NLP, TensorFlow\",\n  \"Cloud Engineer - AWS, Azure, Google Cloud\",\n  \"Software Engineer - Java, Python, SQL, C++\",\n  \"Frontend Developer - React, JavaScript, CSS, HTML, Redux\",\n  \"Backend Developer - Node.js, Express.js, MongoDB, SQL\",\n  \"Full Stack Developer - MERN Stack (MongoDB, Express.js, React, Node.js), REST APIs\",\n  \"AI Engineer - Python, Deep Learning, NLP, TensorFlow, PyTorch\",\n  \"Data Scientist - Python, R, Machine Learning, SQL, Pandas\",\n  \"Data Analyst - Python, SQL, Tableau, Power BI\",\n  \"DevOps Engineer - CI/CD, Jenkins, Docker, Kubernetes, AWS\",\n  \"Cybersecurity Engineer - Network Security, Penetration Testing, SIEM, Firewall\",\n  \"Machine Learning Engineer - Python, Scikit-Learn, TensorFlow, Keras\",\n  \"Blockchain Developer - Solidity, Ethereum, Smart Contracts, Hyperledger\",\n  \"Database Administrator - SQL, MySQL, MongoDB, Oracle\",\n  \"Game Developer - Unity, C#, Unreal Engine, Game Physics\",\n  \"Mobile App Developer - Android (Java, Kotlin), iOS (Swift, Objective-C), Flutter\",\n  \"UI/UX Designer -Figma, Adobe XD, Sketch, Prototyping\",\n  \"Product Manager - Agile, Scrum, Jira, Roadmap Planning\",\n  \"Technical Writer - Documentation, API Writing, Markdown, Git\",\n  \"Quality Assurance Engineer (QA) - Selenium, Postman, TestNG, Automation\",\n  \"System Administrator - Linux, Windows Server, Network Configuration\",\n  \"IT Support Engineer - Troubleshooting, Ticketing Systems, Hardware & Software Support\",\n  \"Network Engineer - LAN/WAN, Cisco, Network Protocols, Firewalls\",\n  \"Embedded Systems Engineer - C, C++, Microcontrollers, RTOS\",\n  \"Electrical Engineer - Circuit Design, MATLAB, PCB Design, Embedded C\",\n  \"Mechanical Engineer - AutoCAD, SolidWorks, Ansys, Mechanical Design\",\n  \"Civil Engineer - AutoCAD, Structural Design, Project Management\",\n  \"Robotics Engineer - ROS, Python, SLAM, Robotics Algorithms\",\n  \"Digital Marketing Specialist - SEO, Google Analytics, PPC, Content Marketing\",\n  \"Business Analyst - SQL, Excel, Power BI, Data Visualization\",\n  \"Salesforce Developer - Apex, Visualforce, Lightning, CRM\",\n  \"ERP Consultant - SAP, Oracle ERP, Microsoft Dynamics, Business Processes\",\n  \"IoT Developer - Arduino, Raspberry Pi, MQTT, IoT Protocols\",\n  \"Telecom Engineer - 5G, LTE, Network Protocols, VoIP\",\n  \"Automation Engineer - Python, Selenium, Ansible, Shell Scripting\",\n  \"Technical Support Engineer - Troubleshooting, Ticketing, Customer Support\",\n  \"Solution Architect - Cloud Architecture, AWS, GCP, Azure, Microservices\",\n  \"Web Developer - HTML, CSS, JavaScript, PHP, WordPress\",\n  \"No-Code Developer - Bubble, Webflow, Airtable, Zapier\",\n  \"Game Tester - Game Testing, Bug Reporting, Test Cases, QA\",\n  \"Content Writer - SEO, Blog Writing, Content Strategy, Copywriting\",\n  \"Project Manager - Agile, Scrum, PMP, Jira\",\n  \"Business Development Manager - Sales, CRM, Lead Generation, Negotiation\",\n  \"Digital Forensics Expert - Cybercrime Investigation, Digital Evidence, Forensics Tools\",\n  \"Ethical Hacker - Penetration Testing, Kali Linux, Metasploit, Nmap\",\n  \"Data Engineer - ETL, Python, Spark, Big Data, SQL\",\n  \"IT Consultant - Solution Design, IT Infrastructure, Cloud Strategy\",\n  \"Graphic Designer - Adobe Photoshop, Illustrator, Canva, Figma\",\n  \"Video Editor - Premiere Pro, After Effects, DaVinci Resolve\",\n  \"SEO Specialist - On-Page SEO, Off-Page SEO, Google Analytics\",\n  \"Social Media Manager - Facebook Ads, Instagram Marketing, Content Strategy\"\n];\n  \n\n  // Generate a consistent score based on resume content and job description\n  const generateScore = (resumeContent, jobDesc) => {\n    const combinedContent = resumeContent + jobDesc;\n    const hash = CryptoJS.SHA256(combinedContent).toString();\n    const score = parseInt(hash.substring(0, 8), 16) % 101;\n    return score;\n  };\n\n  // Generate review feedback based on the match score\n  const getReviewFeedback = (score) => {\n    if (score >= 80) return \"Excellent match! Your resume fits the job perfectly.\";\n    if (score >= 60) return \"Good match. Minor improvements can make it stand out.\";\n    if (score >= 40) return \"Average match. Add more relevant skills and achievements.\";\n    return \"Low match. Enhance your resume with relevant keywords and experience.\";\n  };\n\n  const handleFileChange = (event) => {\n    const uploadedFiles = Array.from(event.target.files);\n    \n    // Validate file types (only PDF)\n    const validFiles = uploadedFiles.filter(file => file.type === \"application/pdf\");\n\n    if (validFiles.length < uploadedFiles.length) {\n      alert(\"Only PDF files are allowed. Some files were ignored.\");\n    }\n\n    setFiles(validFiles);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (files.length === 0 || (!jobDesc && !template)) {\n      alert(\"Please upload at least one resume and provide a job description.\");\n      return;\n    }\n\n    setLoading(true);\n    setProgress(0);\n\n    const newResults = [];\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        const resumeContent = e.target.result;  \n        const score = generateScore(resumeContent, jobDesc || template);\n\n        newResults.push({\n          name: file.name,\n          score: score,\n          feedback: getReviewFeedback(score),\n        });\n\n        setProgress(((i + 1) / files.length) * 100);\n\n        if (newResults.length === files.length) {\n          setResults(newResults);\n          setLoading(false);\n        }\n      };\n\n      reader.readAsText(file);\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center\">Chalie - Quick</h1>\n\n      {/* File Upload */}\n      <div className=\"form-group\">\n        <label htmlFor=\"resume\"><strong>Upload Resumes (PDF only)</strong></label>\n        <input\n          type=\"file\"\n          id=\"resume\"\n          accept=\".pdf\"\n          multiple\n          className=\"form-control\"\n          onChange={handleFileChange}\n        />\n      </div>\n\n      {/* Job Description Dropdown */}\n      <div className=\"form-group mt-3\">\n        <label htmlFor=\"template\"><strong>Job Description</strong></label>\n        <select\n          id=\"template\"\n          className=\"form-control\"\n          onChange={(e) => setTemplate(e.target.value)}\n        >\n          <option value=\"\">Select a Job Template</option>\n          {jobTemplates.map((job, index) => (\n            <option key={index} value={job}>\n              {job}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Manual Job Description */}\n      <div className=\"form-group mt-3\">\n        <textarea\n          className=\"form-control\"\n          placeholder=\"Or enter manually...\"\n          value={jobDesc}\n          onChange={(e) => setJobDesc(e.target.value)}\n        />\n      </div>\n\n      {/* Submit Button */}\n      <div className=\"text-center mt-4\">\n        <button\n          className=\"btn btn-primary\"\n          onClick={handleSubmit}\n          disabled={loading}\n        >\n          {loading ? \"Processing...\" : \"Submit\"}\n        </button>\n      </div>\n\n      {/* Progress Bar */}\n      {loading && (\n        <div className=\"progress mt-3\">\n          <div\n            className=\"progress-bar progress-bar-striped progress-bar-animated\"\n            role=\"progressbar\"\n            style={{ width: `${progress}%` }}\n          >\n            {Math.round(progress)}%\n          </div>\n        </div>\n      )}\n\n      {/* Display Results */}\n      <div className=\"mt-5\">\n        <h4>Shortlisted Resumes</h4>\n        {results.length > 0 ? (\n          <div className=\"row\">\n            {results.map((result, index) => (\n              <div key={index} className=\"col-md-4 mb-4\">\n                <div className={`card ${result.score >= 50 ? \"border-success\" : \"border-danger\"}`}>\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{result.name}</h5>\n                    <p className=\"card-text\">Match Score: <strong>{result.score}%</strong></p>\n                    <p className=\"card-text\">\n                      <small>{result.feedback}</small>\n                    </p>\n                    {result.score < 50 ? (\n                      <span className=\"badge bg-danger\">⚠️ Needs Improvement</span>\n                    ) : (\n                      <span className=\"badge bg-success\">✅ Good Match</span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p>No results yet. Submit resumes to view matches.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}