{"ast":null,"code":"// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const App = () => {\n//   const [files, setFiles] = useState([]);\n//   const [jobDesc, setJobDesc] = useState(\"\");\n//   const [resumeList, setResumeList] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const jobTemplates = [\n//     \"Software Engineer - Java, Python, SQL\",\n//     \"Data Analyst - Python, SQL, Tableau\",\n//     \"Frontend Developer - React, JavaScript, CSS,\",\n//     \"Embedded Systems Engineer - C, C++, Assembly\",\n//     \"Cloud Engineer - AWS, Azure, Google Cloud\",\n//     \"VLSI Engineer - Verilog, VHDL, Python\",\n//     \"Cyber Security Engineer - Python, C, C++,\",\n//     \"DevOps Engineer - Python, Ansible, Jenkins\",\n//     \"Full Stack Developer - Python, JavaScript, CSS,\",\n//     \"Network Engineer - Python, C, C++,\",\n//     \"Python Developer - Python, SQL,\",\n//     \"C++ Developer - C++, Python, SQL\",\n//     \"IoT Engineer - C, C++, Python, MQTT, Raspberry Pi, Arduino\",\n//     \"DevOps Engineer - Docker, Kubernetes, Jenkins, Ansible, Terraform\",\n//     \"Blockchain Developer - Solidity, Ethereum, Hyperledger, Smart Contracts\",\n//     \"Game Developer - C++, C#, Unity, Unreal Engine\",\n//     \"Networking Engineer - CCNA, TCP/IP, Routing, Switching, Firewalls\",\n//     \"AI Engineer - Python, Deep Learning, NLP, Computer Vision, TensorFlow\",\n//     \"AR/VR Developer - Unity, Unreal Engine, C#, C++, OpenXR\",\n//     \"Mobile App Developer - Java, Kotlin, Swift, Flutter, React Native\",\n//     \"Software Engineer - Java, C++, Python, SQL, Software Development Lifecycle\",\n//     \"Database Administrator - MySQL, PostgreSQL, MongoDB, Oracle, SQL Server\",\n//     \"Electrical Engineer - MATLAB, Simulink, Circuit Design, Embedded C\",\n//     \"Mechanical Engineer - SolidWorks, AutoCAD, MATLAB, ANSYS\",\n//     \"Civil Engineer - AutoCAD, Revit, STAAD.Pro, SAP2000\",\n\n// ];\n\n//   const handleFileChange = (event) => {\n//     setFiles(event.target.files);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!files.length || !jobDesc) return alert(\"Please upload at least one resume and enter a job description\");\n\n//     setLoading(true);\n//     const newResumeList = [];\n\n//     for (let file of files) {\n//       const formData = new FormData();\n//       formData.append(\"resume\", file);\n//       formData.append(\"job_desc\", jobDesc);\n\n//       try {\n//         const response = await axios.post(\"http://127.0.0.1:5001/shortlist\", formData, {\n//           headers: { \"Content-Type\": \"multipart/form-data\" },\n//         });\n//         newResumeList.push({ name: file.name, match_score: response.data.match_score, url: URL.createObjectURL(file) });\n//       } catch (error) {\n//         alert(`Failed to upload ${file.name}`);\n//       }\n//     }\n\n//     setResumeList([...resumeList, ...newResumeList].sort((a, b) => b.match_score - a.match_score));\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\" style={{ maxWidth: \"600px\", backgroundColor: \"#f8f9fa\", padding: \"20px\", borderRadius: \"10px\", boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//       <h2 className=\"text-center text-primary mb-4\">AI Resume Shortlisting</h2>\n//       <form onSubmit={handleSubmit} className=\"mt-4\" style={{ maxWidth: \"400px\" }}>\n//         <div className=\"mb-3\">\n//         <label className=\"form-label fw-bold\">Upload Resume (PDF)</label>\n//           <input type=\"file\" className=\"form-control\" onChange={handleFileChange} accept=\".pdf\" multiple required />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"form-label\">Job Description</label>\n//           <select className=\"form-select\" onChange={(e) => setJobDesc(e.target.value)}>\n//             <option value=\"\">Select a Job Template</option>\n//             {jobTemplates.map((template, index) => (\n//               <option key={index} value={template}>{template}</option>\n//             ))}\n//           </select>\n//           <textarea className=\"form-control mt-2\" rows=\"4\" placeholder=\"Or enter manually...\" onChange={(e) => setJobDesc(e.target.value)} required></textarea>\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={loading}>{loading ? \"Processing...\" : \"Submit\"}</button>\n//       </form>\n\n//       {resumeList.length > 0 && (\n//         <div className=\"mt-4\">\n//           <h4>Shortlisted Resumes</h4>\n//           <ul className=\"list-group\">\n//             {resumeList.map((resume, index) => (\n//               <li key={index} className={`list-group-item ${resume.status === \"Shortlisted\" ? \"list-group-item-success\" : \"list-group-item-danger\"}`}>\n//               {resume.name} - Match Score: <strong>{resume.match_score}%</strong> - <span className=\"fw-bold\">{resume.status}</span>\n//               <a href={`http://127.0.0.1:5001/uploads/${resume.name}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-sm btn-success ms-2\">Review</a>\n\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/BHAVESH-PC/OneDrive/Desktop/Resume-Shortlisting/frontend/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const App = () => {\n//   const [files, setFiles] = useState([]);\n//   const [jobDesc, setJobDesc] = useState(\"\");\n//   const [resumeList, setResumeList] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const jobTemplates = [\n//     \"Software Engineer - Java, Python, SQL\",\n//     \"Data Analyst - Python, SQL, Tableau\",\n//     \"Frontend Developer - React, JavaScript, CSS,\",\n//     \"Embedded Systems Engineer - C, C++, Assembly\",\n//     \"Cloud Engineer - AWS, Azure, Google Cloud\",\n//     \"VLSI Engineer - Verilog, VHDL, Python\",\n//     \"Cyber Security Engineer - Python, C, C++,\",\n//     \"DevOps Engineer - Python, Ansible, Jenkins\",\n//     \"Full Stack Developer - Python, JavaScript, CSS,\",\n//     \"Network Engineer - Python, C, C++,\",\n//     \"Python Developer - Python, SQL,\",\n//     \"C++ Developer - C++, Python, SQL\",\n//     \"IoT Engineer - C, C++, Python, MQTT, Raspberry Pi, Arduino\",\n//     \"DevOps Engineer - Docker, Kubernetes, Jenkins, Ansible, Terraform\",\n//     \"Blockchain Developer - Solidity, Ethereum, Hyperledger, Smart Contracts\",\n//     \"Game Developer - C++, C#, Unity, Unreal Engine\",\n//     \"Networking Engineer - CCNA, TCP/IP, Routing, Switching, Firewalls\",\n//     \"AI Engineer - Python, Deep Learning, NLP, Computer Vision, TensorFlow\",\n//     \"AR/VR Developer - Unity, Unreal Engine, C#, C++, OpenXR\",\n//     \"Mobile App Developer - Java, Kotlin, Swift, Flutter, React Native\",\n//     \"Software Engineer - Java, C++, Python, SQL, Software Development Lifecycle\",\n//     \"Database Administrator - MySQL, PostgreSQL, MongoDB, Oracle, SQL Server\",\n//     \"Electrical Engineer - MATLAB, Simulink, Circuit Design, Embedded C\",\n//     \"Mechanical Engineer - SolidWorks, AutoCAD, MATLAB, ANSYS\",\n//     \"Civil Engineer - AutoCAD, Revit, STAAD.Pro, SAP2000\",\n\n// ];\n\n//   const handleFileChange = (event) => {\n//     setFiles(event.target.files);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!files.length || !jobDesc) return alert(\"Please upload at least one resume and enter a job description\");\n\n//     setLoading(true);\n//     const newResumeList = [];\n\n//     for (let file of files) {\n//       const formData = new FormData();\n//       formData.append(\"resume\", file);\n//       formData.append(\"job_desc\", jobDesc);\n\n//       try {\n//         const response = await axios.post(\"http://127.0.0.1:5001/shortlist\", formData, {\n//           headers: { \"Content-Type\": \"multipart/form-data\" },\n//         });\n//         newResumeList.push({ name: file.name, match_score: response.data.match_score, url: URL.createObjectURL(file) });\n//       } catch (error) {\n//         alert(`Failed to upload ${file.name}`);\n//       }\n//     }\n\n//     setResumeList([...resumeList, ...newResumeList].sort((a, b) => b.match_score - a.match_score));\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\" style={{ maxWidth: \"600px\", backgroundColor: \"#f8f9fa\", padding: \"20px\", borderRadius: \"10px\", boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//       <h2 className=\"text-center text-primary mb-4\">AI Resume Shortlisting</h2>\n//       <form onSubmit={handleSubmit} className=\"mt-4\" style={{ maxWidth: \"400px\" }}>\n//         <div className=\"mb-3\">\n//         <label className=\"form-label fw-bold\">Upload Resume (PDF)</label>\n//           <input type=\"file\" className=\"form-control\" onChange={handleFileChange} accept=\".pdf\" multiple required />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"form-label\">Job Description</label>\n//           <select className=\"form-select\" onChange={(e) => setJobDesc(e.target.value)}>\n//             <option value=\"\">Select a Job Template</option>\n//             {jobTemplates.map((template, index) => (\n//               <option key={index} value={template}>{template}</option>\n//             ))}\n//           </select>\n//           <textarea className=\"form-control mt-2\" rows=\"4\" placeholder=\"Or enter manually...\" onChange={(e) => setJobDesc(e.target.value)} required></textarea>\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={loading}>{loading ? \"Processing...\" : \"Submit\"}</button>\n//       </form>\n\n//       {resumeList.length > 0 && (\n//         <div className=\"mt-4\">\n//           <h4>Shortlisted Resumes</h4>\n//           <ul className=\"list-group\">\n//             {resumeList.map((resume, index) => (\n//               <li key={index} className={`list-group-item ${resume.status === \"Shortlisted\" ? \"list-group-item-success\" : \"list-group-item-danger\"}`}>\n//               {resume.name} - Match Score: <strong>{resume.match_score}%</strong> - <span className=\"fw-bold\">{resume.status}</span>\n//               <a href={`http://127.0.0.1:5001/uploads/${resume.name}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-sm btn-success ms-2\">Review</a>\n\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}