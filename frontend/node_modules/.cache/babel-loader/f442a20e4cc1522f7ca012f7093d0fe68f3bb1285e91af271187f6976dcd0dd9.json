{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAVESH-PC\\\\OneDrive\\\\Desktop\\\\Resume-Shortlisting\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const App = () => {\n//   const [files, setFiles] = useState([]);\n//   const [file, setFile] = useState(null);\n//   const [jobDesc, setJobDesc] = useState(\"\");\n//   const [template, setTemplate] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [results, setResults] = useState([]);  // To store match scores\n\n//   const jobTemplates = [\n//     \"Software Engineer - Java, Python, SQL\",\n//     \"Data Analyst - Python, SQL, Tableau\",\n//     \"Frontend Developer - React, JavaScript, CSS\",\n//     \"AI Engineer - Python, Deep Learning, NLP, TensorFlow\",\n//     \"Cloud Engineer - AWS, Azure, Google Cloud\",\n//     \"VLSI Engineer - Verilog, VHDL, Python\",\n//     \"Cyber Security Engineer - Python, C, C++,\",\n//     \"DevOps Engineer - Python, Ansible, Jenkins\",\n//     \"Full Stack Developer - Python, JavaScript, CSS,\",\n//     \"Network Engineer - Python, C, C++,\",\n//     \"Python Developer - Python, SQL,\",\n//     \"C++ Developer - C++, Python, SQL\",\n//     \"IoT Engineer - C, C++, Python, MQTT, Raspberry Pi, Arduino\",\n//     \"DevOps Engineer - Docker, Kubernetes, Jenkins, Ansible, Terraform\",\n//     \"Blockchain Developer - Solidity, Ethereum, Hyperledger, Smart Contracts\",\n//     \"Game Developer - C++, C#, Unity, Unreal Engine\",\n//     \"Networking Engineer - CCNA, TCP/IP, Routing, Switching, Firewalls\",\n//     \"AI Engineer - Python, Deep Learning, NLP, Computer Vision, TensorFlow\",\n//     \"AR/VR Developer - Unity, Unreal Engine, C#, C++, OpenXR\",\n//     \"Mobile App Developer - Java, Kotlin, Swift, Flutter, React Native\",\n//     \"Software Engineer - Java, C++, Python, SQL, Software Development Lifecycle\",\n//     \"Database Administrator - MySQL, PostgreSQL, MongoDB, Oracle, SQL Server\",\n//     \"Electrical Engineer - MATLAB, Simulink, Circuit Design, Embedded C\",\n//     \"Mechanical Engineer - SolidWorks, AutoCAD, MATLAB, ANSYS\",\n//     \"Civil Engineer - AutoCAD, Revit, STAAD.Pro, SAP2000\",\n//   ];\n\n//   const handleFileChange = (event) => {\n//     setFiles([...event.target.files]);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     if (files.length === 0 || (!jobDesc && !template)) {\n//       alert(\"Please upload at least one resume and provide a job description.\");\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     // Simulate match scores for demo purposes\n//     const mockResults = files.map((file) => ({\n//       name: file.name,\n//       score: Math.floor(Math.random() * 100),  // Simulating scores (0-100%)\n//     }));\n\n//     setTimeout(() => {\n//       setResults(mockResults);\n//       setLoading(false);\n//     }, 1000);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1 className=\"text-center\">Charlie For You</h1>\n\n//       {/* File Upload */}\n//       <div className=\"form-group\">\n//         <label htmlFor=\"resume\"><strong>Upload Resumes (PDF)</strong></label>\n//         <input\n//           type=\"file\"\n//           id=\"resume\"\n//           accept=\".pdf\"\n//           multiple\n//           className=\"form-control\"\n//           onChange={handleFileChange}\n//         />\n//       </div>\n\n//       {/* Job Description Dropdown */}\n//       <div className=\"form-group mt-3\">\n//         <label htmlFor=\"template\"><strong>Job Description</strong></label>\n//         <select\n//           id=\"template\"\n//           className=\"form-control\"\n//           onChange={(e) => setTemplate(e.target.value)}\n//         >\n//           <option value=\"\">Select a Job Template</option>\n//           {jobTemplates.map((job, index) => (\n//             <option key={index} value={job}>\n//               {job}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n\n//       {/* Manual Job Description */}\n//       <div className=\"form-group mt-3\">\n//         <textarea\n//           className=\"form-control\"\n//           placeholder=\"Or enter manually...\"\n//           value={jobDesc}\n//           onChange={(e) => setJobDesc(e.target.value)}\n//         />\n//       </div>\n\n//       {/* Submit Button */}\n//       <div className=\"text-center mt-4\">\n//         <button className=\"btn btn-primary\" onClick={handleSubmit}>\n//           {loading ? \"Processing...\" : \"Submit\"}\n//         </button>\n//       </div>\n\n//       {/* Display Results */}\n//       <div className=\"mt-5\">\n//         <h4>Shortlisted Resumes</h4>\n//         {results.length > 0 ? (\n//           <ul className=\"list-group\">\n//             {results.map((result, index) => (\n//               <li key={index} className=\"list-group-item\">\n//                 <strong>{result.name}</strong> - Match Score: {result.score}%\n//                 {result.score < 50 ? (\n//                   <span className=\"text-danger\"> — Sorry, need improvement in your resume.</span>\n//                 ) : (\n//                   <span className=\"text-success\"> — Good match!</span>\n//                 )}\n//               </li>\n//             ))}\n//           </ul>\n//         ) : (\n//           <p>No results yet. Submit resumes to view matches.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport crypto from \"crypto\"; // Import crypto for hashing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [file, setFile] = useState(null);\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [template, setTemplate] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState([]);\n  const jobTemplates = [\"Software Engineer - Java, Python, SQL\", \"Data Analyst - Python, SQL, Tableau\", \"Frontend Developer - React, JavaScript, CSS\", \"AI Engineer - Python, Deep Learning, NLP, TensorFlow\", \"Cloud Engineer - AWS, Azure, Google Cloud\", \"VLSI Engineer - Verilog, VHDL, Python\"\n  //     \"Cyber Security Engineer - Python, C, C++,\",\n  //     \"DevOps Engineer - Python, Ansible, Jenkins\",\n  //     \"Full Stack Developer - Python, JavaScript, CSS,\",\n  //     \"Network Engineer - Python, C, C++,\",\n  //     \"Python Developer - Python, SQL,\",\n  //     \"C++ Developer - C++, Python, SQL\",\n  //     \"IoT Engineer - C, C++, Python, MQTT, Raspberry Pi, Arduino\",\n  //     \"DevOps Engineer - Docker, Kubernetes, Jenkins, Ansible, Terraform\",\n  //     \"Blockchain Developer - Solidity, Ethereum, Hyperledger, Smart Contracts\",\n  //     \"Game Developer - C++, C#, Unity, Unreal Engine\",\n  //     \"Networking Engineer - CCNA, TCP/IP, Routing, Switching, Firewalls\",\n  //     \"AI Engineer - Python, Deep Learning, NLP, Computer Vision, TensorFlow\",\n  //     \"AR/VR Developer - Unity, Unreal Engine, C#, C++, OpenXR\",\n  //     \"Mobile App Developer - Java, Kotlin, Swift, Flutter, React Native\",\n  //     \"Software Engineer - Java, C++, Python, SQL, Software Development Lifecycle\",\n  //     \"Database Administrator - MySQL, PostgreSQL, MongoDB, Oracle, SQL Server\",\n  //     \"Electrical Engineer - MATLAB, Simulink, Circuit Design, Embedded C\",\n  //     \"Mechanical Engineer - SolidWorks, AutoCAD, MATLAB, ANSYS\",\n  //     \"Civil Engineer - AutoCAD, Revit, STAAD.Pro, SAP2000\",\n  ];\n\n  // Function to generate a consistent hash-based score\n  const generateScore = (resumeContent, jobDesc) => {\n    const hash = crypto.createHash(\"sha256\").update(resumeContent + jobDesc).digest(\"hex\");\n\n    // Convert hash into a consistent score between 0-100\n    const score = parseInt(hash.substring(0, 8), 16) % 101;\n    return score;\n  };\n  const handleFileChange = event => {\n    setFiles([...event.target.files]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (files.length === 0 || !jobDesc && !template) {\n      alert(\"Please upload at least one resume and provide a job description.\");\n      return;\n    }\n    setLoading(true);\n    const newResults = [];\n    for (const file of files) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const resumeContent = e.target.result; // Read resume content as text\n        const score = generateScore(resumeContent, jobDesc || template);\n        newResults.push({\n          name: file.name,\n          score: score\n        });\n        if (newResults.length === files.length) {\n          setResults(newResults);\n          setLoading(false);\n        }\n      };\n      reader.readAsText(file); // Read file as text\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"AI Resume Shortlisting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"resume\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Upload Resumes (PDF)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"resume\",\n        accept: \".pdf\",\n        multiple: true,\n        className: \"form-control\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"template\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Job Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"template\",\n        className: \"form-control\",\n        onChange: e => setTemplate(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Job Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), jobTemplates.map((job, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: job,\n          children: job\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        placeholder: \"Or enter manually...\",\n        value: jobDesc,\n        onChange: e => setJobDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleSubmit,\n        children: loading ? \"Processing...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Shortlisted Resumes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), results.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this), \" - Match Score: \", result.score, \"%\", result.score < 50 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \" \\u2014 Sorry, need improvement in your resume.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-success\",\n            children: \" \\u2014 Good match!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results yet. Submit resumes to view matches.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Fw6JLLVeWk7soMFqYSOx9q67wnA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","crypto","jsxDEV","_jsxDEV","App","_s","files","setFiles","file","setFile","jobDesc","setJobDesc","template","setTemplate","loading","setLoading","results","setResults","jobTemplates","generateScore","resumeContent","hash","createHash","update","digest","score","parseInt","substring","handleFileChange","event","target","handleSubmit","preventDefault","length","alert","newResults","reader","FileReader","onload","e","result","push","name","readAsText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","accept","multiple","onChange","value","map","job","index","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/BHAVESH-PC/OneDrive/Desktop/Resume-Shortlisting/frontend/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const App = () => {\n//   const [files, setFiles] = useState([]);\n//   const [file, setFile] = useState(null);\n//   const [jobDesc, setJobDesc] = useState(\"\");\n//   const [template, setTemplate] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [results, setResults] = useState([]);  // To store match scores\n\n//   const jobTemplates = [\n//     \"Software Engineer - Java, Python, SQL\",\n//     \"Data Analyst - Python, SQL, Tableau\",\n//     \"Frontend Developer - React, JavaScript, CSS\",\n//     \"AI Engineer - Python, Deep Learning, NLP, TensorFlow\",\n//     \"Cloud Engineer - AWS, Azure, Google Cloud\",\n//     \"VLSI Engineer - Verilog, VHDL, Python\",\n//     \"Cyber Security Engineer - Python, C, C++,\",\n//     \"DevOps Engineer - Python, Ansible, Jenkins\",\n//     \"Full Stack Developer - Python, JavaScript, CSS,\",\n//     \"Network Engineer - Python, C, C++,\",\n//     \"Python Developer - Python, SQL,\",\n//     \"C++ Developer - C++, Python, SQL\",\n//     \"IoT Engineer - C, C++, Python, MQTT, Raspberry Pi, Arduino\",\n//     \"DevOps Engineer - Docker, Kubernetes, Jenkins, Ansible, Terraform\",\n//     \"Blockchain Developer - Solidity, Ethereum, Hyperledger, Smart Contracts\",\n//     \"Game Developer - C++, C#, Unity, Unreal Engine\",\n//     \"Networking Engineer - CCNA, TCP/IP, Routing, Switching, Firewalls\",\n//     \"AI Engineer - Python, Deep Learning, NLP, Computer Vision, TensorFlow\",\n//     \"AR/VR Developer - Unity, Unreal Engine, C#, C++, OpenXR\",\n//     \"Mobile App Developer - Java, Kotlin, Swift, Flutter, React Native\",\n//     \"Software Engineer - Java, C++, Python, SQL, Software Development Lifecycle\",\n//     \"Database Administrator - MySQL, PostgreSQL, MongoDB, Oracle, SQL Server\",\n//     \"Electrical Engineer - MATLAB, Simulink, Circuit Design, Embedded C\",\n//     \"Mechanical Engineer - SolidWorks, AutoCAD, MATLAB, ANSYS\",\n//     \"Civil Engineer - AutoCAD, Revit, STAAD.Pro, SAP2000\",\n//   ];\n\n//   const handleFileChange = (event) => {\n//     setFiles([...event.target.files]);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     if (files.length === 0 || (!jobDesc && !template)) {\n//       alert(\"Please upload at least one resume and provide a job description.\");\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     // Simulate match scores for demo purposes\n//     const mockResults = files.map((file) => ({\n//       name: file.name,\n//       score: Math.floor(Math.random() * 100),  // Simulating scores (0-100%)\n//     }));\n\n//     setTimeout(() => {\n//       setResults(mockResults);\n//       setLoading(false);\n//     }, 1000);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1 className=\"text-center\">Charlie For You</h1>\n\n//       {/* File Upload */}\n//       <div className=\"form-group\">\n//         <label htmlFor=\"resume\"><strong>Upload Resumes (PDF)</strong></label>\n//         <input\n//           type=\"file\"\n//           id=\"resume\"\n//           accept=\".pdf\"\n//           multiple\n//           className=\"form-control\"\n//           onChange={handleFileChange}\n//         />\n//       </div>\n\n//       {/* Job Description Dropdown */}\n//       <div className=\"form-group mt-3\">\n//         <label htmlFor=\"template\"><strong>Job Description</strong></label>\n//         <select\n//           id=\"template\"\n//           className=\"form-control\"\n//           onChange={(e) => setTemplate(e.target.value)}\n//         >\n//           <option value=\"\">Select a Job Template</option>\n//           {jobTemplates.map((job, index) => (\n//             <option key={index} value={job}>\n//               {job}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n\n//       {/* Manual Job Description */}\n//       <div className=\"form-group mt-3\">\n//         <textarea\n//           className=\"form-control\"\n//           placeholder=\"Or enter manually...\"\n//           value={jobDesc}\n//           onChange={(e) => setJobDesc(e.target.value)}\n//         />\n//       </div>\n\n//       {/* Submit Button */}\n//       <div className=\"text-center mt-4\">\n//         <button className=\"btn btn-primary\" onClick={handleSubmit}>\n//           {loading ? \"Processing...\" : \"Submit\"}\n//         </button>\n//       </div>\n\n//       {/* Display Results */}\n//       <div className=\"mt-5\">\n//         <h4>Shortlisted Resumes</h4>\n//         {results.length > 0 ? (\n//           <ul className=\"list-group\">\n//             {results.map((result, index) => (\n//               <li key={index} className=\"list-group-item\">\n//                 <strong>{result.name}</strong> - Match Score: {result.score}%\n//                 {result.score < 50 ? (\n//                   <span className=\"text-danger\"> — Sorry, need improvement in your resume.</span>\n//                 ) : (\n//                   <span className=\"text-success\"> — Good match!</span>\n//                 )}\n//               </li>\n//             ))}\n//           </ul>\n//         ) : (\n//           <p>No results yet. Submit resumes to view matches.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport crypto from \"crypto\";  // Import crypto for hashing\n\nconst App = () => {\n  const [files, setFiles] = useState([]);\n  const [file, setFile] = useState(null);\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [template, setTemplate] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState([]);  \n\n  const jobTemplates = [\n    \"Software Engineer - Java, Python, SQL\",\n    \"Data Analyst - Python, SQL, Tableau\",\n    \"Frontend Developer - React, JavaScript, CSS\",\n    \"AI Engineer - Python, Deep Learning, NLP, TensorFlow\",\n    \"Cloud Engineer - AWS, Azure, Google Cloud\",\n    \"VLSI Engineer - Verilog, VHDL, Python\",\n//     \"Cyber Security Engineer - Python, C, C++,\",\n//     \"DevOps Engineer - Python, Ansible, Jenkins\",\n//     \"Full Stack Developer - Python, JavaScript, CSS,\",\n//     \"Network Engineer - Python, C, C++,\",\n//     \"Python Developer - Python, SQL,\",\n//     \"C++ Developer - C++, Python, SQL\",\n//     \"IoT Engineer - C, C++, Python, MQTT, Raspberry Pi, Arduino\",\n//     \"DevOps Engineer - Docker, Kubernetes, Jenkins, Ansible, Terraform\",\n//     \"Blockchain Developer - Solidity, Ethereum, Hyperledger, Smart Contracts\",\n//     \"Game Developer - C++, C#, Unity, Unreal Engine\",\n//     \"Networking Engineer - CCNA, TCP/IP, Routing, Switching, Firewalls\",\n//     \"AI Engineer - Python, Deep Learning, NLP, Computer Vision, TensorFlow\",\n//     \"AR/VR Developer - Unity, Unreal Engine, C#, C++, OpenXR\",\n//     \"Mobile App Developer - Java, Kotlin, Swift, Flutter, React Native\",\n//     \"Software Engineer - Java, C++, Python, SQL, Software Development Lifecycle\",\n//     \"Database Administrator - MySQL, PostgreSQL, MongoDB, Oracle, SQL Server\",\n//     \"Electrical Engineer - MATLAB, Simulink, Circuit Design, Embedded C\",\n//     \"Mechanical Engineer - SolidWorks, AutoCAD, MATLAB, ANSYS\",\n//     \"Civil Engineer - AutoCAD, Revit, STAAD.Pro, SAP2000\",\n  ];\n\n  // Function to generate a consistent hash-based score\n  const generateScore = (resumeContent, jobDesc) => {\n    const hash = crypto\n      .createHash(\"sha256\")\n      .update(resumeContent + jobDesc)\n      .digest(\"hex\");\n    \n    // Convert hash into a consistent score between 0-100\n    const score = parseInt(hash.substring(0, 8), 16) % 101;  \n    return score;\n  };\n\n  const handleFileChange = (event) => {\n    setFiles([...event.target.files]);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (files.length === 0 || (!jobDesc && !template)) {\n      alert(\"Please upload at least one resume and provide a job description.\");\n      return;\n    }\n\n    setLoading(true);\n\n    const newResults = [];\n\n    for (const file of files) {\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        const resumeContent = e.target.result;  // Read resume content as text\n        const score = generateScore(resumeContent, jobDesc || template);\n\n        newResults.push({\n          name: file.name,\n          score: score,\n        });\n\n        if (newResults.length === files.length) {\n          setResults(newResults);\n          setLoading(false);\n        }\n      };\n\n      reader.readAsText(file);  // Read file as text\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center\">AI Resume Shortlisting</h1>\n\n      {/* File Upload */}\n      <div className=\"form-group\">\n        <label htmlFor=\"resume\"><strong>Upload Resumes (PDF)</strong></label>\n        <input\n          type=\"file\"\n          id=\"resume\"\n          accept=\".pdf\"\n          multiple\n          className=\"form-control\"\n          onChange={handleFileChange}\n        />\n      </div>\n\n      {/* Job Description Dropdown */}\n      <div className=\"form-group mt-3\">\n        <label htmlFor=\"template\"><strong>Job Description</strong></label>\n        <select\n          id=\"template\"\n          className=\"form-control\"\n          onChange={(e) => setTemplate(e.target.value)}\n        >\n          <option value=\"\">Select a Job Template</option>\n          {jobTemplates.map((job, index) => (\n            <option key={index} value={job}>\n              {job}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Manual Job Description */}\n      <div className=\"form-group mt-3\">\n        <textarea\n          className=\"form-control\"\n          placeholder=\"Or enter manually...\"\n          value={jobDesc}\n          onChange={(e) => setJobDesc(e.target.value)}\n        />\n      </div>\n\n      {/* Submit Button */}\n      <div className=\"text-center mt-4\">\n        <button className=\"btn btn-primary\" onClick={handleSubmit}>\n          {loading ? \"Processing...\" : \"Submit\"}\n        </button>\n      </div>\n\n      {/* Display Results */}\n      <div className=\"mt-5\">\n        <h4>Shortlisted Resumes</h4>\n        {results.length > 0 ? (\n          <ul className=\"list-group\">\n            {results.map((result, index) => (\n              <li key={index} className=\"list-group-item\">\n                <strong>{result.name}</strong> - Match Score: {result.score}%\n                {result.score < 50 ? (\n                  <span className=\"text-danger\"> — Sorry, need improvement in your resume.</span>\n                ) : (\n                  <span className=\"text-success\"> — Good match!</span>\n                )}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No results yet. Submit resumes to view matches.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,OAAOC,MAAM,MAAM,QAAQ,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}