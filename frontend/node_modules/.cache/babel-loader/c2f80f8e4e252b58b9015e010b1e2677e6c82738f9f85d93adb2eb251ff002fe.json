{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAVESH-PC\\\\OneDrive\\\\Desktop\\\\Resume-Shortlisting\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const App = () => {\n//   const [files, setFiles] = useState([]);\n//   const [jobDesc, setJobDesc] = useState(\"\");\n//   const [resumeList, setResumeList] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const jobTemplates = [\n//     \"Software Engineer - Java, Python, SQL\",\n//     \"Data Analyst - Python, SQL, Tableau\",\n//     \"Frontend Developer - React, JavaScript, CSS,\",\n//     \"Embedded Systems Engineer - C, C++, Assembly\",\n//     \"Cloud Engineer - AWS, Azure, Google Cloud\",\n// \"VLSI Engineer - Verilog, VHDL, Python\",\n// \"Cyber Security Engineer - Python, C, C++,\",\n// \"DevOps Engineer - Python, Ansible, Jenkins\",\n// \"Full Stack Developer - Python, JavaScript, CSS,\",\n// \"Network Engineer - Python, C, C++,\",\n// \"Python Developer - Python, SQL,\",\n// \"C++ Developer - C++, Python, SQL\",\n// \"IoT Engineer - C, C++, Python, MQTT, Raspberry Pi, Arduino\",\n// \"DevOps Engineer - Docker, Kubernetes, Jenkins, Ansible, Terraform\",\n// \"Blockchain Developer - Solidity, Ethereum, Hyperledger, Smart Contracts\",\n// \"Game Developer - C++, C#, Unity, Unreal Engine\",\n// \"Networking Engineer - CCNA, TCP/IP, Routing, Switching, Firewalls\",\n// \"AI Engineer - Python, Deep Learning, NLP, Computer Vision, TensorFlow\",\n// \"AR/VR Developer - Unity, Unreal Engine, C#, C++, OpenXR\",\n// \"Mobile App Developer - Java, Kotlin, Swift, Flutter, React Native\",\n// \"Software Engineer - Java, C++, Python, SQL, Software Development Lifecycle\",\n// \"Database Administrator - MySQL, PostgreSQL, MongoDB, Oracle, SQL Server\",\n// \"Electrical Engineer - MATLAB, Simulink, Circuit Design, Embedded C\",\n// \"Mechanical Engineer - SolidWorks, AutoCAD, MATLAB, ANSYS\",\n// \"Civil Engineer - AutoCAD, Revit, STAAD.Pro, SAP2000\",\n\n// ];\n\n//   const handleFileChange = (event) => {\n//     setFiles(event.target.files);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!files.length || !jobDesc) return alert(\"Please upload at least one resume and enter a job description\");\n\n//     setLoading(true);\n//     const newResumeList = [];\n\n//     for (let file of files) {\n//       const formData = new FormData();\n//       formData.append(\"resume\", file);\n//       formData.append(\"job_desc\", jobDesc);\n\n//       try {\n//         const response = await axios.post(\"http://127.0.0.1:5001/shortlist\", formData, {\n//           headers: { \"Content-Type\": \"multipart/form-data\" },\n//         });\n//         newResumeList.push({ name: file.name, match_score: response.data.match_score, url: URL.createObjectURL(file) });\n//       } catch (error) {\n//         alert(`Failed to upload ${file.name}`);\n//       }\n//     }\n\n//     setResumeList([...resumeList, ...newResumeList].sort((a, b) => b.match_score - a.match_score));\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\" style={{ maxWidth: \"600px\", backgroundColor: \"#f8f9fa\", padding: \"20px\", borderRadius: \"10px\", boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//       <h2 className=\"text-center text-primary mb-4\">AI Resume Shortlisting</h2>\n//       <form onSubmit={handleSubmit} className=\"mt-4\" style={{ maxWidth: \"400px\" }}>\n//         <div className=\"mb-3\">\n//         <label className=\"form-label fw-bold\">Upload Resume (PDF)</label>\n//           <input type=\"file\" className=\"form-control\" onChange={handleFileChange} accept=\".pdf\" multiple required />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"form-label\">Job Description</label>\n//           <select className=\"form-select\" onChange={(e) => setJobDesc(e.target.value)}>\n//             <option value=\"\">Select a Job Template</option>\n//             {jobTemplates.map((template, index) => (\n//               <option key={index} value={template}>{template}</option>\n//             ))}\n//           </select>\n//           <textarea className=\"form-control mt-2\" rows=\"4\" placeholder=\"Or enter manually...\" onChange={(e) => setJobDesc(e.target.value)} required></textarea>\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={loading}>{loading ? \"Processing...\" : \"Submit\"}</button>\n//       </form>\n\n//       {resumeList.length > 0 && (\n//         <div className=\"mt-4\">\n//           <h4>Shortlisted Resumes</h4>\n//           <ul className=\"list-group\">\n//             {resumeList.map((resume, index) => (\n//               <li key={index} className={`list-group-item ${resume.status === \"Shortlisted\" ? \"list-group-item-success\" : \"list-group-item-danger\"}`}>\n//               {resume.name} - Match Score: <strong>{resume.match_score}%</strong> - <span className=\"fw-bold\">{resume.status}</span>\n//               <a href={`http://127.0.0.1:5001/uploads/${resume.name}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-sm btn-success ms-2\">Review</a>\n\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [file, setFile] = useState(null);\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [template, setTemplate] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState([]); // To store match scores\n\n  const jobTemplates = [\"Software Engineer - Java, Python, SQL\", \"Data Analyst - Python, SQL, Tableau\", \"Frontend Developer - React, JavaScript, CSS\", \"AI Engineer - Python, Deep Learning, NLP, TensorFlow\", \"Cloud Engineer - AWS, Azure, Google Cloud\"];\n  const handleFileChange = event => {\n    setFiles([...event.target.files]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (files.length === 0 || !jobDesc && !template) {\n      alert(\"Please upload at least one resume and provide a job description.\");\n      return;\n    }\n    setLoading(true);\n\n    // Simulate match scores for demo purposes\n    const mockResults = files.map(file => ({\n      name: file.name,\n      score: Math.floor(Math.random() * 100) // Simulating scores (0-100%)\n    }));\n    setTimeout(() => {\n      setResults(mockResults);\n      setLoading(false);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"AI Resume Shortlisting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"resume\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Upload Resumes (PDF)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"resume\",\n        accept: \".pdf\",\n        multiple: true,\n        className: \"form-control\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"template\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Job Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"template\",\n        className: \"form-control\",\n        onChange: e => setTemplate(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Job Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), jobTemplates.map((job, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: job,\n          children: job\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        placeholder: \"Or enter manually...\",\n        value: jobDesc,\n        onChange: e => setJobDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleSubmit,\n        children: loading ? \"Processing...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Shortlisted Resumes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), results.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), \" - Match Score: \", result.score, \"%\", result.score < 50 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \" \\u2014 Sorry, need improvement in your resume.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-success\",\n            children: \" \\u2014 Good match!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results yet. Submit resumes to view matches.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Fw6JLLVeWk7soMFqYSOx9q67wnA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","files","setFiles","file","setFile","jobDesc","setJobDesc","template","setTemplate","loading","setLoading","results","setResults","jobTemplates","handleFileChange","event","target","handleSubmit","preventDefault","length","alert","mockResults","map","name","score","Math","floor","random","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","accept","multiple","onChange","e","value","job","index","placeholder","onClick","result","_c","$RefreshReg$"],"sources":["C:/Users/BHAVESH-PC/OneDrive/Desktop/Resume-Shortlisting/frontend/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const App = () => {\n//   const [files, setFiles] = useState([]);\n//   const [jobDesc, setJobDesc] = useState(\"\");\n//   const [resumeList, setResumeList] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const jobTemplates = [\n//     \"Software Engineer - Java, Python, SQL\",\n//     \"Data Analyst - Python, SQL, Tableau\",\n//     \"Frontend Developer - React, JavaScript, CSS,\",\n//     \"Embedded Systems Engineer - C, C++, Assembly\",\n//     \"Cloud Engineer - AWS, Azure, Google Cloud\",\n    // \"VLSI Engineer - Verilog, VHDL, Python\",\n    // \"Cyber Security Engineer - Python, C, C++,\",\n    // \"DevOps Engineer - Python, Ansible, Jenkins\",\n    // \"Full Stack Developer - Python, JavaScript, CSS,\",\n    // \"Network Engineer - Python, C, C++,\",\n    // \"Python Developer - Python, SQL,\",\n    // \"C++ Developer - C++, Python, SQL\",\n    // \"IoT Engineer - C, C++, Python, MQTT, Raspberry Pi, Arduino\",\n    // \"DevOps Engineer - Docker, Kubernetes, Jenkins, Ansible, Terraform\",\n    // \"Blockchain Developer - Solidity, Ethereum, Hyperledger, Smart Contracts\",\n    // \"Game Developer - C++, C#, Unity, Unreal Engine\",\n    // \"Networking Engineer - CCNA, TCP/IP, Routing, Switching, Firewalls\",\n    // \"AI Engineer - Python, Deep Learning, NLP, Computer Vision, TensorFlow\",\n    // \"AR/VR Developer - Unity, Unreal Engine, C#, C++, OpenXR\",\n    // \"Mobile App Developer - Java, Kotlin, Swift, Flutter, React Native\",\n    // \"Software Engineer - Java, C++, Python, SQL, Software Development Lifecycle\",\n    // \"Database Administrator - MySQL, PostgreSQL, MongoDB, Oracle, SQL Server\",\n    // \"Electrical Engineer - MATLAB, Simulink, Circuit Design, Embedded C\",\n    // \"Mechanical Engineer - SolidWorks, AutoCAD, MATLAB, ANSYS\",\n    // \"Civil Engineer - AutoCAD, Revit, STAAD.Pro, SAP2000\",\n\n// ];\n\n//   const handleFileChange = (event) => {\n//     setFiles(event.target.files);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     if (!files.length || !jobDesc) return alert(\"Please upload at least one resume and enter a job description\");\n\n//     setLoading(true);\n//     const newResumeList = [];\n\n//     for (let file of files) {\n//       const formData = new FormData();\n//       formData.append(\"resume\", file);\n//       formData.append(\"job_desc\", jobDesc);\n\n//       try {\n//         const response = await axios.post(\"http://127.0.0.1:5001/shortlist\", formData, {\n//           headers: { \"Content-Type\": \"multipart/form-data\" },\n//         });\n//         newResumeList.push({ name: file.name, match_score: response.data.match_score, url: URL.createObjectURL(file) });\n//       } catch (error) {\n//         alert(`Failed to upload ${file.name}`);\n//       }\n//     }\n\n//     setResumeList([...resumeList, ...newResumeList].sort((a, b) => b.match_score - a.match_score));\n//     setLoading(false);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\" style={{ maxWidth: \"600px\", backgroundColor: \"#f8f9fa\", padding: \"20px\", borderRadius: \"10px\", boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\" }}>\n//       <h2 className=\"text-center text-primary mb-4\">AI Resume Shortlisting</h2>\n//       <form onSubmit={handleSubmit} className=\"mt-4\" style={{ maxWidth: \"400px\" }}>\n//         <div className=\"mb-3\">\n//         <label className=\"form-label fw-bold\">Upload Resume (PDF)</label>\n//           <input type=\"file\" className=\"form-control\" onChange={handleFileChange} accept=\".pdf\" multiple required />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"form-label\">Job Description</label>\n//           <select className=\"form-select\" onChange={(e) => setJobDesc(e.target.value)}>\n//             <option value=\"\">Select a Job Template</option>\n//             {jobTemplates.map((template, index) => (\n//               <option key={index} value={template}>{template}</option>\n//             ))}\n//           </select>\n//           <textarea className=\"form-control mt-2\" rows=\"4\" placeholder=\"Or enter manually...\" onChange={(e) => setJobDesc(e.target.value)} required></textarea>\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={loading}>{loading ? \"Processing...\" : \"Submit\"}</button>\n//       </form>\n\n//       {resumeList.length > 0 && (\n//         <div className=\"mt-4\">\n//           <h4>Shortlisted Resumes</h4>\n//           <ul className=\"list-group\">\n//             {resumeList.map((resume, index) => (\n//               <li key={index} className={`list-group-item ${resume.status === \"Shortlisted\" ? \"list-group-item-success\" : \"list-group-item-danger\"}`}>\n//               {resume.name} - Match Score: <strong>{resume.match_score}%</strong> - <span className=\"fw-bold\">{resume.status}</span>\n//               <a href={`http://127.0.0.1:5001/uploads/${resume.name}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-sm btn-success ms-2\">Review</a>\n\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  const [files, setFiles] = useState([]);\n  const [file, setFile] = useState(null);\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [template, setTemplate] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState([]);  // To store match scores\n\n  const jobTemplates = [\n    \"Software Engineer - Java, Python, SQL\",\n    \"Data Analyst - Python, SQL, Tableau\",\n    \"Frontend Developer - React, JavaScript, CSS\",\n    \"AI Engineer - Python, Deep Learning, NLP, TensorFlow\",\n    \"Cloud Engineer - AWS, Azure, Google Cloud\",\n    \n  ];\n\n  const handleFileChange = (event) => {\n    setFiles([...event.target.files]);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (files.length === 0 || (!jobDesc && !template)) {\n      alert(\"Please upload at least one resume and provide a job description.\");\n      return;\n    }\n\n    setLoading(true);\n\n    // Simulate match scores for demo purposes\n    const mockResults = files.map((file) => ({\n      name: file.name,\n      score: Math.floor(Math.random() * 100),  // Simulating scores (0-100%)\n    }));\n\n    setTimeout(() => {\n      setResults(mockResults);\n      setLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center\">AI Resume Shortlisting</h1>\n\n      {/* File Upload */}\n      <div className=\"form-group\">\n        <label htmlFor=\"resume\"><strong>Upload Resumes (PDF)</strong></label>\n        <input\n          type=\"file\"\n          id=\"resume\"\n          accept=\".pdf\"\n          multiple\n          className=\"form-control\"\n          onChange={handleFileChange}\n        />\n      </div>\n\n      {/* Job Description Dropdown */}\n      <div className=\"form-group mt-3\">\n        <label htmlFor=\"template\"><strong>Job Description</strong></label>\n        <select\n          id=\"template\"\n          className=\"form-control\"\n          onChange={(e) => setTemplate(e.target.value)}\n        >\n          <option value=\"\">Select a Job Template</option>\n          {jobTemplates.map((job, index) => (\n            <option key={index} value={job}>\n              {job}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Manual Job Description */}\n      <div className=\"form-group mt-3\">\n        <textarea\n          className=\"form-control\"\n          placeholder=\"Or enter manually...\"\n          value={jobDesc}\n          onChange={(e) => setJobDesc(e.target.value)}\n        />\n      </div>\n\n      {/* Submit Button */}\n      <div className=\"text-center mt-4\">\n        <button className=\"btn btn-primary\" onClick={handleSubmit}>\n          {loading ? \"Processing...\" : \"Submit\"}\n        </button>\n      </div>\n\n      {/* Display Results */}\n      <div className=\"mt-5\">\n        <h4>Shortlisted Resumes</h4>\n        {results.length > 0 ? (\n          <ul className=\"list-group\">\n            {results.map((result, index) => (\n              <li key={index} className=\"list-group-item\">\n                <strong>{result.name}</strong> - Match Score: {result.score}%\n                {result.score < 50 ? (\n                  <span className=\"text-danger\"> — Sorry, need improvement in your resume.</span>\n                ) : (\n                  <span className=\"text-success\"> — Good match!</span>\n                )}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No results yet. Submit resumes to view matches.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}